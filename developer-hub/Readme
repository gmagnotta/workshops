# Developer HUB lab

This lab is used to demonstrate on how to install and use Red Hat Developer HUB.

## Prerequirements

Install OpenShift Pipelines, OpenShift GitOps, Single Sign-On, Developer Workspace and SonarQube before developer hub to show useful templates to customers!


You need keycloak with a realm to authenticate users. The realm should be called RHDH and also the client id.

Configure SSO as defined here -> https://docs.redhat.com/en/documentation/red_hat_developer_hub/1.2/html/getting_started_with_red_hat_developer_hub/assembly-auth-provider-oidc#proc-configuring-keycloak-with-oidc_rhdh-getting-started

Remember to use a Valid redirect url as: https://backstage-developer-hub-developerhub.your-domain/api/auth/oidc/handler/frame

Configure Keycloak import plugin -> https://docs.redhat.com/en/documentation/red_hat_developer_hub/1.2/html/configuring_plugins_in_red_hat_developer_hub/rhdh-installing-dynamic-plugins#installation

In order to work, the Client Id needs to have query-groups, query-users and view-users roles.

Remember: Clients -> Client Id -> Service Account Roles -> Click at the top 'service-account-rhdh' -> Role Mapping !!!!

Configure github integration -> https://medium.com/@mifoster1723/sso-integrations-in-backstage-with-github-e40c2ec519a9

To generate a token for SonarQube, login as admin, then in top right on the profile icon, select my account, then security and generate an user token


## Setup

Run playbook_developer_hub_secrets.yaml and then playbook_developer_hub.yaml

## RBAC

The system is configured to use RBAC.

In Keycloak you need a group 'admins' for users that can change configuration of Developer Hub and a group 'developers' for users that can use it.

In ArgoCD please edit `oc edit argocd openshift-gitops -n openshift-gitops`:

`
  rbac:
    defaultPolicy: ''
    policy: |
      g, system:cluster-admins, role:admin
      g, cluster-admins, role:admin
      p, backstage, applications, *, */*, allow
      p, backstage, projects, *, *, allow
    scopes: '[groups]'
  extraConfig:
    accounts.backstage: 'apiKey, login'
`

oc patch argocd openshift-gitops -n openshift-gitops --type merge --patch '{"spec": {"rbac": {"policy": "g, system:cluster-admins, role:admin\ng, cluster-admins, role:admin\np, backstage, applications, *, */*, allow\np, backstage, projects, *, *, allow"}}}'

oc patch argocd openshift-gitops -n openshift-gitops --type merge --patch '{"spec": {"extraConfig": {"accounts.backstage": "''apiKey, login''"}}}'


And generate a new token from the UI.

## Resources

https://piotrminkowski.com/2024/07/04/idp-on-openshift-with-red-hat-developer-hub/
