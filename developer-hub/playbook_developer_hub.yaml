---
#
# Playbook to deploy Developer HUB
#
- name: Deploy Developer HUB
  hosts: localhost
  vars:
    domain: "apps.cluster-jhjkm.jhjkm.sandbox2896.opentlc.com"
    sso: "sso.apps.cluster-jhjkm.jhjkm.sandbox2896.opentlc.com"
    ocp_api: "api.cluster-jhjkm.jhjkm.sandbox2896.opentlc.com:6443"
  tasks:

    - name: Create Namespace
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: rhdh-operator

    - name: Create OperatorGroup
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1
          kind: OperatorGroup
          metadata:
            name: rhdh-operator
            namespace: rhdh-operator
          spec:

    - name: Create Subscription
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: rhdh
            namespace: rhdh-operator
          spec:
            source: redhat-operators
            sourceNamespace: openshift-marketplace
            name: rhdh
            channel: fast-1.2
            installPlanApproval: Automatic

    - name: Search pod
      kubernetes.core.k8s_info:
        kind: Pod
        label_selectors:
          - "app = rhdh-operator"
      register: pod_list
      until: pod_list|json_query('resources[*].status.phase')|unique == ["Running"]
      retries: 10
      delay: 10

    - name: Create Namespace
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: developerhub

    - name: Create ConfigMap
      kubernetes.core.k8s:
        state: present
        definition:
          kind: ConfigMap
          apiVersion: v1
          metadata:
            name: app-config-rhdh
            namespace: developerhub
          data:
            app-config-rhdh.yaml: |
              app:
                title: Giuseppe's Red Hat Developer Hub
                baseUrl: https://backstage-developer-hub-developerhub.{{ domain }}
              backend:
                baseUrl: https://backstage-developer-hub-developerhub.{{ domain }}
                cors:
                  origin: https://backstage-developer-hub-developerhub.{{ domain }}
              auth:
                session:
                  secret: supersecretcookie
                environment: production
                providers:
                  oidc:
                    production:
                      clientId: ${SSO_CLIENT_ID}
                      clientSecret: ${SSO_CLIENT_SECRET}
                      metadataUrl: https://{{ sso }}/realms/RHDH
                      prompt: auto
                      signIn:
                        resolvers:
                          - resolver: preferredUsernameMatchingUserEntityName
              signInPage: oidc
              permission:
                enabled: true
                rbac:
                  admin:
                    users:
                      - name: group:default/admins
              catalog:
                providers:
                    keycloakOrg:
                      default:
                        schedule:
                          frequency: { minutes: 1 }
                          timeout: { minutes: 1 }
                          initialDelay: { seconds: 15 }
                        baseUrl: https://{{ sso }}
                        realm: 'RHDH'
                        loginRealm: RHDH
                        clientId: ${SSO_CLIENT_ID}
                        clientSecret: ${SSO_CLIENT_SECRET}
                import:
                  entityFilename: catalog-info.yaml
                  pullRequestBranchName: backstage-integration
                rules:
                  - allow: [Component, System, Group, Resource, Location, Template, API]
                locations:
                  - type: url
                    target: https://github.com/janus-idp/backstage-showcase/blob/main/catalog-entities/all.yaml
                  - type: url
                    target: https://github.com/redhat-developer/red-hat-developer-hub-software-templates/blob/main/templates.yaml
                  - type: url
                    target: https://github.com/gmagnotta/backstage-templates/blob/master/templates.yaml
              integrations:
                github:
                  - host: github.com
                    token: ${GITHUB_TOKEN}

    - name: Create ConfigMap
      kubernetes.core.k8s:
        state: present
        definition:
          kind: ConfigMap
          apiVersion: v1
          metadata:
            name: dynamic-plugins-rhdh
            namespace: developerhub
          data:
            dynamic-plugins.yaml: |
              includes:
                - dynamic-plugins.default.yaml
              plugins:
                - package: ./dynamic-plugins/dist/roadiehq-backstage-plugin-github-pull-requests
                  disabled: true
                  pluginConfig:
                    dynamicPlugins:
                      frontend:
                        roadiehq.backstage-plugin-github-pull-requests:
                          mountPoints:
                            - mountPoint: entity.page.overview/cards
                              importName: EntityGithubPullRequestsOverviewCard
                              config:
                                layout:
                                  gridColumnEnd:
                                    lg: "span 4"
                                    md: "span 6"
                                    xs: "span 12"
                                if:
                                  allOf:
                                    - isGithubPullRequestsAvailable
                            - mountPoint: entity.page.pull-requests/cards
                              importName: EntityGithubPullRequestsContent
                              config:
                                layout:
                                  gridColumn: "1 / -1"
                                if:
                                  allOf:
                                    - isGithubPullRequestsAvailable
                - package: './dynamic-plugins/dist/backstage-plugin-catalog-backend-module-github-dynamic'
                  disabled: false
                  pluginConfig: {}
                - package: './dynamic-plugins/dist/janus-idp-backstage-plugin-argocd'
                  disabled: false
                  pluginConfig:
                    dynamicPlugins:
                      frontend:
                        janus-idp.backstage-plugin-argocd:
                          mountPoints:
                            - mountPoint: entity.page.overview/cards
                              importName: ArgocdDeploymentSummary
                              config:
                                layout:
                                  gridColumnEnd:
                                    lg: "span 8"
                                    xs: "span 12"
                                if:
                                  allOf:
                                    - isArgocdConfigured
                            - mountPoint: entity.page.cd/cards
                              importName: ArgocdDeploymentLifecycle
                              config:
                                layout:
                                  gridColumn: '1 / -1'
                                if:
                                  allOf:
                                    - isArgocdConfigured
                - package: './dynamic-plugins/dist/janus-idp-backstage-plugin-rbac'
                  disabled: false
                - package: './dynamic-plugins/dist/janus-idp-backstage-plugin-keycloak-backend-dynamic'
                  disabled: false
                - package: './dynamic-plugins/dist/janus-idp-backstage-plugin-tekton'
                  disabled: false
                  pluginConfig:
                    dynamicPlugins:
                      frontend:
                        janus-idp.backstage-plugin-tekton:
                          mountPoints:
                            - mountPoint: entity.page.ci/cards
                              importName: TektonCI
                              config:
                                layout:
                                  gridColumn: "1 / -1"
                                if:
                                  allOf:
                                    - isTektonCIAvailable
                - package: './dynamic-plugins/dist/janus-idp-backstage-plugin-topology'
                  disabled: false
                  pluginConfig:
                    dynamicPlugins:
                      frontend:
                        janus-idp.backstage-plugin-topology:
                          mountPoints:
                            - mountPoint: entity.page.topology/cards
                              importName: TopologyPage
                              config:
                                layout:
                                  gridColumn: "1 / -1"
                                  height: 75vh
                                if:
                                  anyOf:
                                    - hasAnnotation: backstage.io/kubernetes-id
                                    - hasAnnotation: backstage.io/kubernetes-namespace
                - package: './dynamic-plugins/dist/backstage-plugin-kubernetes-backend-dynamic'
                  disabled: false
                  pluginConfig:
                    kubernetes:
                      customResources:
                      - group: 'tekton.dev'
                        apiVersion: 'v1beta1'
                        plural: 'pipelines'
                      - group: 'tekton.dev'
                        apiVersion: 'v1beta1'
                        plural: 'pipelineruns'
                      - group: 'tekton.dev'
                        apiVersion: 'v1beta1'
                        plural: 'taskruns'
                      - group: 'route.openshift.io'
                        apiVersion: 'v1'
                        plural: 'routes'
                      serviceLocatorMethod:
                        type: 'multiTenant'
                      clusterLocatorMethods:
                        - type: 'config'
                          clusters:
                            - name: ocp
                              url: https://{{ ocp_api }}
                              authProvider: 'serviceAccount'
                              skipTLSVerify: true
                              skipMetricsLookup: true
                              serviceAccountToken: ${OPENSHIFT_TOKEN}
                - package: './dynamic-plugins/dist/backstage-plugin-kubernetes'
                  disabled: false
                  pluginConfig:
                    dynamicPlugins:
                      frontend:
                        backstage.plugin-kubernetes:
                          mountPoints:
                            - mountPoint: entity.page.kubernetes/cards
                              importName: EntityKubernetesContent
                              config:
                                layout:
                                  gridColumn: "1 / -1"
                                if:
                                  anyOf:
                                    - hasAnnotation: backstage.io/kubernetes-id
                                    - hasAnnotation: backstage.io/kubernetes-namespace
                - package: './dynamic-plugins/dist/roadiehq-backstage-plugin-argo-cd'
                  disabled: false
                  pluginConfig:
                    dynamicPlugins:
                      frontend:
                        roadiehq.backstage-plugin-argo-cd:
                          mountPoints:
                            - mountPoint: entity.page.overview/cards
                              importName: EntityArgoCDOverviewCard
                              config:
                                layout:
                                  gridColumnEnd:
                                    lg: "span 8"
                                    xs: "span 12"
                                if:
                                  allOf:
                                    - isArgocdAvailable
                            - mountPoint: entity.page.cd/cards
                              importName: EntityArgoCDHistoryCard
                              config:
                                layout:
                                  gridColumn: "1 / -1"
                                if:
                                  allOf:
                                    - isArgocdAvailable
                - package: './dynamic-plugins/dist/roadiehq-scaffolder-backend-argocd-dynamic'
                  disabled: false
                  pluginConfig: {}
                - package: ./dynamic-plugins/dist/roadiehq-backstage-plugin-argo-cd-backend-dynamic
                  disabled: false
                  pluginConfig:
                    argocd:
                      appLocatorMethods:
                        - type: 'config'
                          instances:
                            - name: main
                              url: "https://openshift-gitops-server-openshift-gitops.{{ domain }}"
                              token: "${ARGOCD_TOKEN}"

    - name: Create Backstage
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: rhdh.redhat.com/v1alpha1
          kind: Backstage
          metadata:
            name: developer-hub
            namespace: developerhub
          spec:
            database:
              enableLocalDb: true
            application:
              appConfig:
                mountPath: /opt/app-root/src
                configMaps:
                  - name: app-config-rhdh
              extraEnvs:
                envs:
                  - name: NODE_TLS_REJECT_UNAUTHORIZED
                    value: '0'
                  - name: LOG_LEVEL
                    value: 'debug'
                secrets:
                  - name: secrets-rhdh
              extraFiles:
                mountPath: /opt/app-root/src
              dynamicPluginsConfigMapName: dynamic-plugins-rhdh
              replicas: 1
              route:
                enabled: true
