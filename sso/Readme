# SSO lab

This lab is used to demonstrate on how SSO works inside OCP

## Setup

Make sure to have installed the ansible collections needed. Otherwise: `ansible-galaxy collection install -r collections/requirements.yml -p collections'

## Installation

Run the ansible playbook 'playbook_provision_sso.yaml'. Pay attention at the variables required from the imported playbooks.

For example: `ansible-navigator run  -m stdout sso/playbook_provision_sso.yaml -e project="giuseppe" -e registry_username="myuser" -e registry_password="mypassword" --senv K8S_AUTH_HOST="https://api.domain.com:6443" --senv K8S_AUTH_API_KEY="sha256~123234556576767878" -e postgresql_database="sso" -e postgresql_user="sso" -e postgresql_password="sso" -e hostname="sso.domain.com"`

## Configure OCP authentication to use Keycloak

Create a Realm (OCP)

Create a new client - call it ocp:

- enable authentication
- user valid redirect uri: https://oauth-openshift.apps.domain.com/oauth2callback/keycloak

Extract cert of keycloak:

echo | openssl s_client -showcerts -connect sso.apps.domain.com:443 2>&1 | sed --quiet '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > keycloak.crt


Go to OCP Admin Console -> Cluster Settings -> Configuration -> OAuth

Click Add at the bottom and select OpenID Connect

Add the identity provider as:

name: keycloak
client id: ocp
client secret: the one generated by keycloak
Issuer URL: https://sso2.apps.domain.com/realms/OCP
CA File: use the file downloaded with the script

Finally configure RBAC on the OpenShift cluster to provide specific users with Cluster Admin privileges
Now that we have our OAuth Identity Provider configured and Keycloak federating with Active Directory, we need to establish how a user can be provided with different RBAC roles and permissions.

In this example, we will create a group and assign a role-binding to the Cluster Admin role. Then we can add users to the group and they will inherit the role of Cluster Admin. RBAC can be implemented in many different ways, but this is a simple example for an initial POC that demonstrates the OIDC implementation leveraging AD users and OpenShift controlled RBAC.

In the OpenShift console, navigate to ‘User Management’ -> ‘Groups’

Click on ‘Create Group’ and populate the yaml definition with a group name and the Active Directory user accounts you want to give ‘Cluster Admin’ access to

Create the group, then go into the config and navigate to the ‘RoleBindings’ tab

Create a new binding, select ‘Cluster-wide role binding’ and provide a name, then select the ‘cluster-admin’ role from the Role name dropdown 
