---
- name: Initialize a Project and essentials stuff (such as secrets)
  hosts: localhost
  vars:
    project: "myproject"
    registry_name: "registryredhatio"
    registry_hostname: "registry.redhat.io"
    registry_username: "myuser"
    registry_password: "mypassword"
    create_builder_secret: false
    create_operator_group: false
  tasks:

    - name: Create {{ project }} Namespace
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ project }}"
            labels:
             app: "{{ project }}"

    - name: Create Registry {{ registry_name }} Secret
      kubernetes.core.k8s:
        state: present
        template: secret.j2

    - name: Read default ServiceAccount
      kubernetes.core.k8s_info:
        kind: ServiceAccount
        name: default
        namespace: "{{ project }}"
      register: default_service_account
      changed_when: false

    # - name: Link default secret
    #   ansible.builtin.command: oc secrets link default {{ registry_name }} --for=pull -n {{ project }}

    - name: Link default secret
      kubernetes.core.k8s_json_patch:
        kind: ServiceAccount
        namespace: "{{ project }}"
        name: default
        patch:
          - op: add
            path: /imagePullSecrets
            value:
              - name: "{{ registry_name }}"
      when:
        - default_service_account.resources[0] is not search(registry_name)

    - name: Read builder ServiceAccount
      kubernetes.core.k8s_info:
        kind: ServiceAccount
        name: builder
        namespace: "{{ project }}"
      register: builder_service_account
      changed_when: false
      when: create_builder_secret

    - name: Link builder secret
      kubernetes.core.k8s_json_patch:
        kind: ServiceAccount
        namespace: "{{ project }}"
        name: builder
        patch:
          - op: add
            path: /secrets
            value:
              - name: "{{ registry_name }}"
      when: 
        - create_builder_secret
        - builder_service_account.resources[0] is not search(registry_name)

    - name: Create OperatorGroup
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1
          kind: OperatorGroup
          metadata:
            name: "{{ project }}"
            namespace: "{{ project }}"
          spec:
            targetNamespaces:
              - "{{ project }}"
            upgradeStrategy: Default
      when: create_operator_group

# Grant view role permission to a user
# oc adm policy add-role-to-user view <user> -n <project>

# Grang view role permission to a group
# oc adm policy add-role-to-group view <group> -n <project>

# view - This role allows read-only access within a given namespace. It does not allow viewing or modifying of roles or role bindings. 
# edit - This role grants read/write access within a given Kubernetes namespace. It cannot view or modify roles or role bindings.
# admin - This role permits unlimited read/write access to resources within a namespace. This role can create roles and role bindings within a particular namespace. It does not permit write access to the namespace itself.
# cluster-admin - This “superuser” can perform any action on any resource in a cluster. You can use this in a ClusterRoleBinding to grant full control over every resource in the cluster (and in all namespaces) or in a RoleBinding to grant full control over every resource in the respective namespace.
